https://www.geeksforgeeks.org/reactjs-introduction-jsx/ 

https://reactjs.org/ ---> https://react.dev/ (new website)

* Commands ->

npm run build - is the command to build
npm start - to open IE

RUN:

cd my-app
npm run dev


https://codeburst.io/react-js-for-beginners-the-basics-87ef6e54dae7

https://codeflarelimited.com/blog/dynamically-populate-select-options-in-react-js/


https://hackr.io/blog/react-projects - examples of projects

https://flatlogic.com/blog/top-15-react-app-ideas-for-web-developer-in-2022/ - examples of projects


https://www.youtube.com/watch?v=-MFiza7ZRzs&ab_channel=DaveGray --> useful video to create APIs with Next.js

https://www.youtube.com/watch?v=zR5FoKMAJp4&ab_channel=YaserAz --> 2nd useful video to create APIs with Next.js

https://nextjs.org/docs/app/building-your-application/data-fetching --> sources how to create APIs with Next.js

https://legacy.reactjs.org/docs/faq-ajax.html --> sources how to create APIs with Next.js


https://fullstackheroes.com/tutorials/javascript/5-ways-to-remove-duplicate-objects-from-array-based-on-property/ --> way to remove duplicates from arrays

https://pietschsoft.com/post/2015/09/05/javascript-basics-how-to-create-a-dictionary-with-keyvalue-pairs?fbclid=IwAR1JAqRyJYwvs39dXjkUo6y--A7khZIZAlXJXmwfu-oMO_JOOuOByInN9CI --> create a dictionary

https://stackoverflow.com/questions/34913675/how-to-iterate-keys-values-in-javascript --> how to itinerate a dictionary


https://codesandbox.io/s/todo-list-with-react-and-typescript-6kvkn?file=/src/components/TodoItem.tsx --> to do list

https://www.geeksforgeeks.org/create-todo-app-using-reactjs/ --> to do list

Remove duplicates with object destructuring --> const removeDuplicatedMakes = useCallback(() => {
                                                    return [...new Map(cars.map((cars) => [cars.make, cars])).values()]
                                                }, [cars]);


- route.ts cannot be in the same folder as page.tsx (in the same directory!)


"use client" - To use client components in Next.js, you need to add the use client directive as the first line of your file 
               (before any imports). This will tell Next.js that this is a client component and it can use hooks. 
               Otherwise, Next.js will treat your component as a server component, which cannot use hooks.


//How to use useEffect

useEffect(() => {
    console.log('Hello!');
}, []);

useEffect(() => {
    console.log('Wines changed!');
}, [wines]);


//API code sample

let carsShowroomUrl = "http://localhost:3000/APIs/cars-showroom";

useEffect(() => {
    fetch(carsShowroomUrl)
        .then((response) => response)
        .then(e => e.json())
        .then(e => setCars(e as Car[]))
        .catch(error =>
            setError(error))
}, [carsShowroomUrl]);

//Short writing for a for loop

for (let j = 0; j < foods.length; j++) { ... } ---> for (let i of foods) { ... }

//Most common element without dictionary

let common: string | undefined;
let maxCount = 0;

for (let i in foods) {
    let count = 0;

    for (let j = 0; j < foods.length; j++) {
        if (foods[i].unit == foods[j].unit) {
            count++;
        }
        if (count > maxCount) {
            maxCount = count;
            common = foods[i].unit;
        }
    }
}

return common;